{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","wrapper","inner","img","src","avatar","alt","message","name","text","time","messageData","HW1","Affair","priorityStyle","priority","affair","onClick","deleteAffairCallback","_id","btn","Affairs","mappedAffairs","data","map","a","onAll","button","filter","active","onHigh","onLow","onMiddle","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","f","filterAffairs","deleteAffair","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.797cf649.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__kIn-i\",\"wrapper\":\"Affairs_wrapper__gjjTs\",\"btn\":\"Affairs_btn__2kjMW\",\"button\":\"Affairs_button__3WESg\",\"active\":\"Affairs_active__2_jYF\",\"name\":\"Affairs_name__3vzuj\",\"priority\":\"Affairs_priority__R4N2W\",\"low\":\"Affairs_low__2jWap\",\"high\":\"Affairs_high__1sJtN\",\"middle\":\"Affairs_middle__1r9X7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper__1_2sC\",\"inner\":\"Message_inner__3RfED\",\"message\":\"Message_message__3pLLt\",\"img\":\"Message_img__3B-Lv\",\"name\":\"Message_name__2-O9Y\",\"text\":\"Message_text__1abwr\",\"time\":\"Message_time__2jqm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__cQtHq\"};","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\ntype MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={s.wrapper}>\r\n\r\n            <div className={s.inner}>\r\n                <img className={s.img} src={props.avatar} alt='img'/>\r\n                <div className={s.message}>\r\n                    <div className={s.name}>{props.name}</div>\r\n                    <div className={s.text}>{props.message}</div>\r\n                    <div className={s.time}>{props.time}</div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Леночка',\r\n    message: 'Где тебя черти носят,опять с Димычем ??? Вот пусть он тебе жрать и готовит.',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix\r\n    let priorityStyle = s.priority + ' ' + s[props.affair.priority]\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <p className={s.name}>{props.affair.name} </p>\r\n            <p className={priorityStyle}>{props.affair.priority} </p>\r\n            <button onClick={deleteCallback} className={s.btn}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter('all')\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        props.setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter('low')\r\n    }\r\n\r\n\r\n    const onAll = s.button + \" \" + (props.filter === 'all' ? s.active : '')\r\n    const onHigh = s.button + \" \" + (props.filter === 'high' ? s.active : '')\r\n    const onLow = s.button + \" \" + (props.filter === 'low' ? s.active : '')\r\n    const onMiddle = s.button + \" \" + (props.filter === 'middle' ? s.active : '')\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div>{mappedAffairs}</div>\r\n\r\n            <button onClick={setAll} className={onAll}>All</button>\r\n            <button onClick={setHigh} className={onHigh}>High</button>\r\n            <button onClick={setMiddle} className={onMiddle}>Middle</button>\r\n            <button onClick={setLow} className={onLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle'// need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n    if (filter === 'high') return affairs.filter(f => f.priority === 'high')\r\n    if (filter === 'low') return affairs.filter(f => f.priority === 'low')\r\n    if (filter === 'middle') return affairs.filter(f => f.priority === 'middle')\r\n    else {\r\n        return affairs\r\n    }\r\n}// need to fix\r\n\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(a => a._id !== _id)// need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                filter={filter}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}